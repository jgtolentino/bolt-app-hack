name: Quarterly Key Rotation Reminder

on:
  schedule:
    # Run at 3 AM UTC on the 1st day of every 3rd month (Jan, Apr, Jul, Oct)
    - cron: '0 3 1 */3 *'
  workflow_dispatch:  # Allow manual trigger

jobs:
  rotation-reminder:
    name: Key Rotation Reminder
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check key age
        id: key-age
        run: |
          # Calculate days since last rotation (stored in secrets)
          LAST_ROTATION="${{ secrets.LAST_KEY_ROTATION || '2024-01-01' }}"
          DAYS_AGO=$(( ($(date +%s) - $(date -d "$LAST_ROTATION" +%s)) / 86400 ))
          echo "days_since_rotation=$DAYS_AGO" >> $GITHUB_OUTPUT
          
          if [ $DAYS_AGO -gt 90 ]; then
            echo "rotation_needed=true" >> $GITHUB_OUTPUT
          else
            echo "rotation_needed=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Create rotation issue
        if: steps.key-age.outputs.rotation_needed == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const daysSince = ${{ steps.key-age.outputs.days_since_rotation }};
            const issueBody = `## üîÑ Quarterly Key Rotation Due
            
            It has been **${daysSince} days** since the last key rotation.
            
            ### Keys to Rotate
            
            #### Supabase
            - [ ] SUPABASE_ANON_KEY
            - [ ] SUPABASE_SERVICE_ROLE_KEY
            - [ ] SUPABASE_ACCESS_TOKEN
            
            #### AI Providers
            - [ ] OPENAI_API_KEY
            - [ ] ANTHROPIC_API_KEY
            - [ ] GROQ_API_KEY
            
            #### Other
            - [ ] JWT_SECRET
            - [ ] Database passwords
            
            ### Rotation Steps
            
            1. Run \`./scripts/rotate-keys.sh\`
            2. Update all platforms:
               - [ ] Vercel environment variables
               - [ ] Render environment variables
               - [ ] GitHub Secrets
               - [ ] Local \`.env.local\` files
            3. Update \`secrets.enc.yaml\` and commit
            4. Test all integrations
            5. Update LAST_KEY_ROTATION secret to today's date
            
            ### Verification
            - [ ] All services functioning with new keys
            - [ ] Old keys revoked/deleted
            - [ ] Team notified of rotation
            - [ ] Documentation updated
            
            ---
            ‚è∞ **Due Date**: Within 7 days
            üè∑Ô∏è **Priority**: High
            `;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üîë Quarterly Key Rotation Required',
              body: issueBody,
              labels: ['security', 'maintenance', 'priority:high'],
              assignees: ['jgtolentino']  // Update with your username
            });
      
      - name: Send Slack notification
        if: steps.key-age.outputs.rotation_needed == 'true' && secrets.SLACK_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' \
            --data '{"text":"üîë Quarterly key rotation is due! Check GitHub for the rotation issue."}' \
            ${{ secrets.SLACK_WEBHOOK }}

  key-usage-audit:
    name: Audit Key Usage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Audit environment variable usage
        run: |
          echo "## Environment Variable Usage Report"
          echo
          echo "### Frontend (VITE_ variables)"
          grep -r "VITE_" src/ --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" | \
            sed 's/.*\(VITE_[A-Z_]*\).*/\1/' | sort | uniq -c | sort -nr
          
          echo
          echo "### Potential Issues"
          # Check for any non-VITE env vars in frontend
          if grep -r "process\.env\." src/ | grep -v "VITE_" | grep -v node_modules; then
            echo "‚ö†Ô∏è  Found non-VITE environment variables in frontend!"
          else
            echo "‚úÖ No unauthorized environment variables in frontend"
          fi